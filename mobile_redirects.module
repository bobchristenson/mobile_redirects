<?php
// $Id$

/**
 * @file
 *   Allows redirection of mobile users to alternate paths
 */
 
 /**
 * Implementation of hook_menu().
 */
  function mobile_redirects_menu() {
    $items['admin/settings/mobile_redirects'] = array(
      'file' => 'mobile_redirects.admin.inc',
      'title' => 'Mobile Redirects Settings',
      'description' => 'Set original path and mobile redirect path for mobile redirections',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('mobile_redirects_settings'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );
  
    $items['admin/settings/mobile_redirects/delete'] = array(
      'file' => 'mobile_redirects.admin.inc',
      'title' => 'Delete Mobile Redirects',
      'description' => 'Delete existing mobile redirects',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('mobile_redirects_delete'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
    ); 
    return $items;
  }

/*
* Implementation of hook_nodeapi
* Redirect users when visiting a page with a mobile version
*/
function mobile_redirects_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if($op == 'view') {
    if (mobile_tools_is_mobile_device()) 	{
		//find the current path
		//TODO: make this work without path module
		$path = drupal_get_path_alias($_GET['q']);
		$theresult = db_result(db_query('SELECT redirect FROM {mobile_redirects} WHERE path ="%s"', $path));
		if(!empty($theresult)) {
			drupal_goto($theresult);
		};
  }
}
